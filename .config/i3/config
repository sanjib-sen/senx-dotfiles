#######################
# config starts here: #
#######################

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:Noto Sans Regular 10

# set the mod key to the winkey:
set $mod Mod4

#####################
# workspace layout: #
#####################

# default i3 tiling mode:
workspace_layout default

# i3 stacking layout:
# Each window will be fullscreen and tabbed top to bottom.
#workspace_layout stacking

# i3 tabbed layout:
# Each new window will open fullscreen as a tab (left to right)
#workspace_layout tabbed

##############################
# extra options for windows: #
##############################

#border indicator on windows: 
new_window pixel 1

# thin borders
# hide_edge_borders both

# Set inner/outer gaps
gaps inner 6
gaps outer 3

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# switch to workspace
bindsym $mod+1    workspace  $ws1
bindsym $mod+2    workspace  $ws2
bindsym $mod+3    workspace  $ws3
bindsym $mod+4    workspace  $ws4
bindsym $mod+5    workspace  $ws5
bindsym $mod+6    workspace  $ws6
bindsym $mod+7    workspace  $ws7
bindsym $mod+8    workspace  $ws8
bindsym $mod+9    workspace  $ws9
bindsym $mod+0    workspace  $ws10

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace  $ws1
bindsym $mod+Shift+2    move container to workspace  $ws2
bindsym $mod+Shift+3    move container to workspace  $ws3
bindsym $mod+Shift+4    move container to workspace  $ws4
bindsym $mod+Shift+5    move container to workspace  $ws5
bindsym $mod+Shift+6    move container to workspace  $ws6
bindsym $mod+Shift+7    move container to workspace  $ws7
bindsym $mod+Shift+8    move container to workspace  $ws8
bindsym $mod+Shift+9    move container to workspace  $ws9
bindsym $mod+Shift+0    move container to workspace  $ws10



# resize window (you can also use the mouse for that):
mode "resize" {
# These bindings trigger as soon as you enter the resize mode
# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
#        bindsym j resize shrink width 10 px or 10 ppt
#        bindsym k resize grow height 10 px or 10 ppt
#        bindsym l resize shrink height 10 px or 10 ppt
#        bindsym ntilde resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
bindsym Left resize shrink width 10 px or 10 ppt
bindsym Down resize grow height 10 px or 10 ppt
bindsym Up resize shrink height 10 px or 10 ppt
bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape
bindsym Return mode "default"
bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

######################################
# keybindings for different actions: #
######################################

# start a terminal
bindsym $mod+Return exec xfce4-terminal

# kill focused window
bindsym $mod+c kill

# exit-menu
bindsym $mod+Shift+e exec ~/.config/rofi/scripts/powermenu

# Lock the system
# lock with a picture:
bindsym $mod+l exec betterlockscreen --lock dim
# lock by blurring the screen:
#bindsym $mod+l exec ~/.config/i3/scripts/blur-lock.sh

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart



# Backlight control
bindsym XF86MonBrightnessUp exec xbacklight +10
bindsym XF86MonBrightnessDown exec xbacklight -10

# change focus

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+j split h

# split in vertical orientation
bindsym $mod+h split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+g layout tabbed
# bindsym $mod+w layout toggle split

# toggle tiling / floating
bindsym $mod+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# open new empty workspace
bindsym $mod+Shift+n exec ~/.config/i3/scripts/empty_workspace.sh

## Multimedia Keys
# volume
# bindsym XF86AudioRaiseVolume exec amixer -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks && dunstify -h string:x-dunst-stack-tag:volume Volume: $(amixer --get-volume)%
# bindsym XF86AudioLowerVolume exec amixer -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks
# # mute
# bindsym XF86AudioMute exec amixer sset Master toggle && killall -USR1 i3blocks

#Pulse Audio controls

#volume up
bindsym XF86AudioRaiseVolume exec pamixer -i 5 && dunstify -h string:x-dunst-stack-tag:volume Volume: $(pamixer --get-volume)%
#volume down
bindsym XF86AudioLowerVolume exec pamixer -d 5 && dunstify -h string:x-dunst-stack-tag:volume Volume: $(pamixer --get-volume)%
#mute
bindsym XF86AudioMute exec pamixer -t && dunstify -h string:x-dunst-stack-tag:mute mute: $(pamixer --get-mute)!

# gradular volume control
#bindsym $mod+XF86AudioRaiseVolume exec amixer -D pulse sset Master 1%+ && pkill -RTMIN+1 i3blocks
#bindsym $mod+XF86AudioLowerVolume exec amixer -D pulse sset Master 1%- && pkill -RTMIN+1 i3blocks


#mute
#bindsym XF86AudioMute exec pamixer -t && notify-send "mute: $(pamixer --get-mute)"

bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Redirect sound to headphones
bindsym $mod+p exec /usr/local/bin/switch-audio-port

##########################################
# Browser #
##########################################
bindsym $mod+Shift+w exec --no-startup-id /home/sanjib/.config/rofi/scripts/browser/new
bindsym $mod+w exec --no-startup-id /home/sanjib/.config/rofi/scripts/browser/same

bindsym $mod+Shift+g exec --no-startup-id echo "" | rofi -dmenu -theme "~/.config/rofi/themes/search.rasi" -p "Google" | xargs -I{} google-chrome-stable --new-window https://www.google.de/search?q={}
bindsym $mod+g exec --no-startup-id echo "" | rofi -dmenu -theme "~/.config/rofi/themes/search.rasi" -p "Google" | xargs -I{} google-chrome-stable https://www.google.de/search?q={}

bindsym $mod+y exec --no-startup-id echo "" | rofi -dmenu -theme "~/.config/rofi/themes/search.rasi" -p "Youtube" | xargs -I{} google-chrome-stable https://www.youtube.com/results?search_query={}
bindsym $mod+Shift+y exec --no-startup-id echo "" | rofi -dmenu -theme "~/.config/rofi/themes/search.rasi" -p "Youtube" | xargs -I{} google-chrome-stable --new-window https://www.youtube.com/results?search_query={}

##########################################
# Apps #
##########################################
bindsym $mod+n exec /usr/bin/thunar

##########################################
# Taking Screenshot #
##########################################
bindsym --release Print exec "scrot ~/Pictures/Screenshots/%Y-%m-%d-%T.png -e 'xclip -selection clipboard -t image/png -i $f'"
bindsym --release $mod+Shift+s exec "scrot -s ~/Pictures/Screenshots/%Y-%m-%d-%T.png -e 'xclip -selection clipboard -t image/png -i $f'"

##########################################
# configuration for workspace behaviour: #
##########################################
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

#############################################
# Clipboard Manager: #
#############################################
exec --no-startup-id greenclip daemon
bindsym $mod+v exec rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

#############################################
# Emoji: #
#############################################
# install noto-fonts-emoji, xdtools, rofimoji, nerd-fonts-source-code-pro
# yay -S  noto-fonts-emoji xdtools rofimoji nerd-fonts-source-code-pro
bindsym $mod+e exec --no-startup-id rofimoji


#############################################
# autostart applications/services on login: #
#############################################

#picom
exec --no-startup-id picom -b --experimental-backends

# polybar
exec --no-startup-id ~/.config/polybar/launch.sh --forest

# ibus-openbangla
exec --no-startup-id ibus-daemon -drx
exec ibux-daemon -drx

#set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600
#exec --no-startup-id xss-lock -- i3lock -n -i background_image.png 

# Desktop notifications
exec --no-startup-id dbus-launch dunst --config ~/.config/dunst/dunstrc


# start blueberry app for managing bluetooth devices from tray:
# exec --no-startup-id blueberry-tray
# get auth work with polkit-gnome
# exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# dex execute .desktop files
# keep in mind that it can cause issues 
# when second to i3 a DE is installed or mixed usage of i3 + xfce4 or GNOME
# in this cases better disable dex and use manual starting apps using xdg/autostart
# exec --no-startup-id dex -a -s /etc/xdg/autostart/:~/.config/autostart/
# num lock activated
# exec --no-startup-id numlockx on
# start conky: 
# exec_always --no-startup-id conky
# start a script to setup displays
# uncomment the next line, use arandr to setup displays and save the file as monitor:
# exec --no-startup-id ~/.screenlayout/monitor.sh
# networkmanager-applet
# exec --no-startup-id nm-applet
# set wallpaper
# exec --no-startup-id nitrogen --restore
# exec --no-startup-id feh --bg-fill /usr/share/endeavouros/backgrounds/endeavouros_i3.png
# Double-Hash = comment, Single-Hash = command 
## Autostart apps as you like
# exec --no-startup-id sleep 2 && xfce4-terminal
# exec --no-startup-id sleep 7 && firefox https://github.com/endeavouros-team/endeavouros-i3wm-setup/blob/main/force-knowledge.md
## set floating (nontiling)for apps needing it
#for_window [class="Yad" instance="yad"] floating enable
#for_window [class="Galculator" instance="galculator"] floating enable
#for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
##set floating (nontiling) for special apps
#for_window [class="Xsane" instance="xsane"] floating enable
#for_window [class="xfce4-power-manager"] floating enable



######################################
# color settings for bar and windows #
######################################
 
# Define colors variables: 
# set $darkbluetrans	#08052be6
# set $darkblue		#08052b
# set $lightblue		#5294e2
# set $urgentred		#e53935
# set $white		#ffffff
# set $black		#000000
# set $purple		#e345ff
# set $darkgrey		#383c4a
# set $grey		#b0b5bd
# set $mediumgrey		#8b8b8b
# set $yellowbrown	#e1b700

# define colors for windows:
#class		        	border		bground		text		indicator	child_border
# client.focused		    $lightblue	$darkblue	$white		$purple		$mediumgrey
# client.unfocused	    $darkblue	$darkblue	$grey		$purple		$darkgrey
# client.focused_inactive	$darkblue	$darkblue	$grey		$purple		$black
# client.urgent		    $urgentred	$urgentred	$white		$purple		$yellowbrown

set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0

# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $bg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg



#####################################
# Application menu handled by rofi: #
#####################################

## rofi bindings fancy application menu (two bindings F9/$mod+d)

bindsym $mod+d exec rofi -modi drun -show drun \
		-config ~/.config/rofi/themes/rofidmenu.rasi

bindsym $mod+Tab exec rofi -show window \
		-config ~/.config/rofi/themes/rofidmenu.rasi 


# PROTIP: You can also dynamically set dmenu's colors this way:
# bindsym $mod+d exec dmenu_run -nb "$fg" -nf "$bg" -sb "$bg" -sf "$fg"